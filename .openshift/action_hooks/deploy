#!/bin/bash
source $OPENSHIFT_CARTRIDGE_SDK_BASH
source "${OPENSHIFT_REPO_DIR}.openshift/lib/onbb_utils.sh"

#
# Run NodeBB setup passing through all its output
#
function onbb_setup_nodebb () {
	echo "Running setup"

	# Remember current working directory and switch to repo directory
	local d=`pwd`
	cd $OPENSHIFT_REPO_DIR

	# Generate name
	local name=$OPENSHIFT_APP_NAME

	# Generate password
	local pass=`tr -cd '[:alnum:]' < /dev/urandom | fold -w16 | head -n1 | fold -w4 | paste -sd\- -`

	# Generate NodeBB secret
	local secret=`uuidgen -r`

	# Try to get e-mail, if not found, use fake address
	local email="$NODEBB_ADMIN_EMAIL"
	if [ "$email" = "" ] ; then
		email="$name@127.0.0.1"
	fi

	# Prepare JSON
	local json='{"secret": "'$secret'", "admin:username": "'$name'", "admin:email": "'$email'", "admin:password": "'$pass'", "admin:password:confirm": "'$pass'"}'

	# Run setup and redirect output to file, so we can search it later
	local LOGFILE="logs/openshift-nodebb-setup.log"
	node app --setup "$json" 2>&1 | tee $LOGFILE

	# Success marker
	local failed=1

	# Check result by looking for specific text
	# Would be better if NodeBB's setup would exit with code
	# but it does not, so we use this fragile workaround.
	if cat $LOGFILE | grep -q "NodeBB Setup Completed" ; then
		# Success
		failed=0

		if cat $LOGFILE | grep -q "running initial user setup" ; then
			# Created new admin user and finished
			onbb_echo_result_of_setup_success $name $pass $email
		else
			# Finished upgrade (admin user already existed)
			onbb_echo_result_of_setup_success
		fi

		# Remove log file
		rm $LOGFILE
	else
		if cat $LOGFILE | grep -q "There was a problem completing NodeBB\|NodeBB Setup Aborted\|Error: listen EADDRINUSE" ; then
			# Failed
			onbb_echo_result_of_setup_failed $LOGFILE "There was a problem completing NodeBB setup."
		else
			# Possibly failed
			onbb_echo_result_of_setup_failed $LOGFILE
		fi
	fi

	# Switch back to previous directory
	cd "$d"

	# Return error when failed
	if [ $failed -eq 1 ] ; then
		return 1
	fi
}

#
# Prepare everything and run setup
#
function onbb_deploy () {
	# Get version number
	local version=$(onbb_get_nodebb_version)

	echo "Stopping NodeBB processes"
	onbb_wait_until_stopped 3 || return 1

	echo "Configuring NodeBB $version for OpenShift"

	onbb_setup_sourcecode $version || return 1
	onbb_setup_environment || return 1
	onbb_setup_nodebb || return 1
}

# Exit with error if something went wrong - that will prevent rest of the deployment process from erroring even more.
onbb_deploy || exit 1
