upstream io_nodes {
    ip_hash;

    server 127.0.0.1:{{...CONTAINER_ENV_NODEBB_PORT}};
}

server {
    listen {{!CONTAINER_NGINX_PORT}};
    listen [::]:{{!CONTAINER_NGINX_PORT}};

    server_name {{!APP_USE_FQDN}} *.{{!APP_USE_FQDN}};

    # Just in case of some mistakes later, make sure there is some safe root set.
    root /usr/share/nginx/html/;

    # Set 502 error to local, so when NodeBB is down, nginx can serve some info instead.
    # Page should be static, i.e., no dababase queries, so backup can be done in a bit safer way.
    error_page  502    /502.html;
    location = /502.html {
        root /;
        try_files {{NGINX_NODEBB_ROOT}}/public/502.html /usr/share/nginx/html/50x.html =502;
    }

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-NginX-Proxy true;
    proxy_redirect off;

    # Socket.io Support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    gzip            on;
    gzip_min_length 1000;
    gzip_proxied    off;
    gzip_types      text/plain application/xml text/javascript application/javascript application/x-javascript text/css application/json;

    location @nodebb {
        proxy_pass http://io_nodes;
    }

    location ~ ^/assets/(.*) {
        root {{!NGINX_NODEBB_ROOT}}/;
        try_files /build/public/$1 /public/$1 @nodebb;
    }

    location /plugins/ {
        root {{!NGINX_NODEBB_ROOT}}/build/public/;
        try_files $uri @nodebb;
    }

    location / {
        proxy_pass http://io_nodes;
    }
}
