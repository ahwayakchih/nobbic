#!/bin/bash

source "${CONTAINER_REPO_DIR}.container/lib/onbb_utils.sh"

# Hide stdout, keep stderr, wait, output result
echo "Waiting for database to start..."
onbb_wait_until_db_ready 120 || (onbb_echo_result_of_start_failed ${CONTAINER_REPO_DIR}nodebb/logs/output.log && exit 1) || exit 1
echo "Database seems to be ready, start can continue"


# Restore data, if available
if [ -f "${CONTAINER_REPO_DIR}nodebb.tar" ] ; then
	echo "Restoring /data from ${CONTAINER_REPO_DIR}nodebb.tar archive"
	tar x -C / -v -f - < "${CONTAINER_REPO_DIR}nodebb.tar" && rm "${CONTAINER_REPO_DIR}nodebb.tar"
	if [ -f "${CONTAINER_REPO_DIR}nodebb.tar" ] ; then
		echo "ERROR: Could not cleanup after restore" >&2
		exit 1
	fi
fi

# Run upgrade, if previously installed version was different
VERSION_CURRENT=$(onbb_get_nodebb_version)
VERSION_PREVIOUS=$(cat "${CONTAINER_DATA_DIR}NODEBB_VERSION" 2>/dev/null || echo -n "")
echo "NodeBB is at v${VERSION_CURRENT}, was at v${VERSION_PREVIOUS}"
if [ ! -z "$VERSION_PREVIOUS" ] && [ "$VERSION_CURRENT" != "$VERSION_PREVIOUS" ] ; then
	./.container/action_hooks/upgrade |& tee ${CONTAINER_REPO_DIR}logs/upgrade.log || exit 1
elif [ ! -d "${CONTAINER_REPO_DIR}nodebb/node_modules" ] ; then
	# Run installation, if it was not installed before
	./.container/action_hooks/deploy |& tee ${CONTAINER_REPO_DIR}logs/deploy.log || exit 1
fi
