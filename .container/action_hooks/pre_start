#!/bin/bash

source "${CONTAINER_REPO_DIR}.container/lib/onbb_utils.sh"

# Wait for database indefinitely
echo "Waiting for database to start..."
while true ; do
	onbb_wait_until_db_ready 5 || continue
	break
done

echo "Database seems to be ready, start can continue"

# Restore data, if available
for archive in ${CONTAINER_REPO_DIR}nodebb-*.tar ; do
	test -f "$archive" || continue
	echo "Restoring /app from $archive archive"
	tar x -C / -v -f - < "$archive" && rm "$archive"
	if [ -f "$archive" ] ; then
		echo "ERROR: Could not cleanup $archive" >&2
		exit 1
	fi

	# TODO: remove this before release - it's here only to restore older backups
	if [ -d "${CONTAINER_REPO_DIR}data/nodebb" ] ; then
		mkdir -p ${CONTAINER_REPO_DIR}data/nodebb/public\
		&& mv ${CONTAINER_REPO_DIR}data/nodebb/public-uploads ${CONTAINER_REPO_DIR}data/nodebb/public/uploads\
		&& cp -aTu ${CONTAINER_REPO_DIR}data/nodebb/. ${CONTAINER_REPO_DIR}nodebb/\
		&& rm -rf ${CONTAINER_REPO_DIR}data
	fi
done

# Run upgrade, if previously installed version was different
VERSION_CURRENT=$(onbb_get_nodebb_version)
VERSION_PREVIOUS=$(cat "${CONTAINER_REPO_DIR}NODEBB_VERSION" 2>/dev/null || echo -n "")

echo -n "NodeBB is at v${VERSION_CURRENT}"
if [ ! -z "$VERSION_PREVIOUS" ] ; then
	echo -n ", it was at v${VERSION_PREVIOUS}"
fi
echo ""

if [ ! -z "$VERSION_PREVIOUS" ] && [ "$VERSION_CURRENT" != "$VERSION_PREVIOUS" ] ; then
	./.container/action_hooks/upgrade |& tee ${CONTAINER_REPO_DIR}logs/upgrade.log || exit 1
elif [ ! -d "${CONTAINER_REPO_DIR}nodebb/node_modules" ] ; then
	# Run installation, if it was not installed before
	./.container/action_hooks/deploy |& tee ${CONTAINER_REPO_DIR}logs/deploy.log || exit 1
fi
